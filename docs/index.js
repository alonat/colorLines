class t{constructor(t,i){this.ballColors=i,this.tmpLine=[],this.tmpColor="",this.ballsContainer=document.querySelector(".balls-container"),this.amountToDelete=5,this.ballArray=t,this.HORIZONTAL_DIR=[0,1,0,-1],this.VERTICAL_DIR=[1,0,-1,0],this.LOOP_DIAGONAL_DIR=[-1,1,1,-1],this.MAIN_DIAGONAL_DIR=[1,1,-1,-1],this.removedAmount=0}check(t,i,e){let l=!0;const s=this.ballArray[t+e[0]]&&this.ballArray[t][i]===this.ballArray[t+e[0]][i+e[1]]||this.ballArray[t+e[2]]&&this.ballArray[t][i]===this.ballArray[t+e[2]][i+e[3]];return l&=Boolean(this.ballArray[t][i]),l&=s,l}findHorizontalLine(){for(let t=0;t<this.ballArray.length;t+=1){this.tmpLine=[],this.tmpColor="";for(let i=0;i<this.ballArray.length;i+=1)this.check(t,i,this.HORIZONTAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[t][i]&&this.removeBalls(),this.tmpLine.push({i:t,j:i}),this.tmpColor=this.ballArray[t][i]):this.removeBalls();this.removeBalls()}}findVerticalLine(){for(let t=0;t<this.ballArray.length;t+=1){this.tmpLine=[],this.tmpColor="";for(let i=0;i<this.ballArray.length;i+=1)this.check(i,t,this.VERTICAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[i][t]&&this.removeBalls(),this.tmpLine.push({i:i,j:t}),this.tmpColor=this.ballArray[i][t]):this.removeBalls();this.removeBalls()}}findLoopDiagonalLine(){let t=0;for(let i=0;i<this.ballArray.length;i+=1){this.tmpLine=[],this.tmpColor="";for(let e=0;e<=i;e+=1)t=i-e,this.check(t,e,this.LOOP_DIAGONAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[t][e]&&this.removeBalls(),this.tmpLine.push({i:t,j:e}),this.tmpColor=this.ballArray[t][e]):this.removeBalls();this.removeBalls()}for(let i=this.ballArray.length-2;i>=0;i-=1){this.tmpLine=[],this.tmpColor="";for(let e=0;e<=i;e+=1){t=i-e;const l=this.ballArray.length-e-1,s=this.ballArray.length-t-1;this.check(s,l,this.LOOP_DIAGONAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[s][l]&&this.removeBalls(),this.tmpLine.push({i:s,j:l}),this.tmpColor=this.ballArray[s][l]):this.removeBalls()}this.removeBalls()}}findMainDiagonalLine(){let t=0;for(let i=this.ballArray.length-1;i>=0;i-=1){this.tmpLine=[],this.tmpColor="";for(let e=i;e<=this.ballArray.length-1;e+=1)t=e-i,this.check(t,e,this.MAIN_DIAGONAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[t][e]&&this.removeBalls(),this.tmpLine.push({i:t,j:e}),this.tmpColor=this.ballArray[t][e]):this.removeBalls();this.removeBalls()}for(let i=1;i<this.ballArray.length;i+=1){this.tmpLine=[],this.tmpColor="";for(let e=0;e<=this.ballArray.length-1-i;e+=1)t=i+e,this.check(t,e,this.MAIN_DIAGONAL_DIR)?(""!==this.tmpColor&&this.tmpColor!==this.ballArray[t][e]&&this.removeBalls(),this.tmpLine.push({i:t,j:e}),this.tmpColor=this.ballArray[t][e]):this.removeBalls();this.removeBalls()}}removeBalls(){if(this.tmpLine.length<this.amountToDelete)return this.tmpLine=[],void(this.tmpColor="");this.tmpLine.forEach((t=>{this.ballsContainer.childNodes.forEach((i=>{i.classList.contains(`ball-position-${t.j+1}-${t.i+1}`)&&this.ballsContainer.removeChild(i)})),this.ballArray[t.i][t.j]=0})),this.tmpLine=[],this.tmpColor="",this.removedAmount+=1}findLine(){return this.findHorizontalLine(),this.findVerticalLine(),this.findMainDiagonalLine(),this.findLoopDiagonalLine(),[this.ballArray,this.removedAmount]}}class i{constructor(t,i){this.board=t,this.boardSize=this.board.length,this.matrix=this.makeAdjacencyMatrix(),this.start=i,this.fromNode=this.getNodeNumber(...this.start)}getNodeNumber(t,i){return t*this.boardSize+i}getNodeCoord(t){return[Number(Math.floor(t/this.boardSize)),t%this.boardSize]}makeAdjacencyMatrix(){const t=this.boardSize*this.boardSize,i=[];for(let e=0;e<t;e+=1)i.push(new Array(t).fill(0));for(let t=0;t<this.boardSize;t+=1)for(let e=0;e<this.boardSize;e+=1){const l=t*this.boardSize+e;e>0&&(i[l-1][l]=1,i[l][l-1]=1),t>0&&(i[l-this.boardSize][l]=1,i[l][l-this.boardSize]=1)}return i}removeFilledNode(t,i){const e=this.getNodeNumber(t,i);for(let t=0;t<this.boardSize*this.boardSize;t+=1)e!==this.fromNode&&(this.matrix[e][t]=0,this.matrix[t][e]=0)}removeAllFilledNodes(){for(let t=0;t<this.boardSize;t+=1)for(let i=0;i<this.boardSize;i+=1)this.board[t][i]&&this.removeFilledNode(t,i)}bfs(t,i){const e=[],l=this.getNodeNumber(t,i);e.push(l);const s=new Array(this.boardSize*this.boardSize).fill(!1),r=new Array(this.boardSize*this.boardSize).fill(-1);for(s[l]=!0;e.length>0;){const t=e.shift();for(let i=0;i<this.matrix[t].length;i+=1)if(1===this.matrix[t][i]){const l=i;s[l]||(s[l]=!0,e.push(l),r[l]=t)}}return r}getMinPath(t){this.removeAllFilledNodes();const i=this.bfs(...this.start);let e=this.getNodeNumber(...t);const l=[];if(l.push(this.getNodeCoord(e)),-1===i[e])return[];for(;e!==this.fromNode;)e=i[e],l.push(this.getNodeCoord(e));return l.reverse()}}let e=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]];const l=["green","red","yellow","violet","blue","orange","pink"],s=new class{constructor(t,i){this.ballsContainer=document.querySelector(".balls-container"),this.ballArray=t,this.ballColors=i,this.availablePosition=[]}getAvailablePosition(){this.availablePosition=[];for(let t=0;t<this.ballArray.length;t+=1)for(let i=0;i<this.ballArray.length;i+=1)this.ballArray[t][i]||this.availablePosition.push({x:i,y:t})}getRandomPosition(){return this.getAvailablePosition(),this.availablePosition[Math.floor(Math.random()*this.availablePosition.length)]}createNBalls(t){return Array(t).fill("").map((()=>this.ballColors[Math.floor(Math.random()*this.ballColors.length)]))}createBallElement(t,i){const e=document.createElement("div"),l=["ball",`ball-color-${t}`];return i&&l.push(`ball-position-${i.x+1}-${i.y+1}`),e.setAttribute("class",l.join(" ")),e}insertNBalls(t){return t.forEach((t=>{const i=this.getRandomPosition();if(i){const e=this.createBallElement(t,i);this.ballsContainer.appendChild(e),this.ballArray[i.y][i.x]=t}})),console.log(this.ballArray),this.ballArray}moveBallXY(t,i){const e=`ball-position-${t[1]+1}-${t[0]+1}`,l=`ball-position-${i[1]+1}-${i[0]+1}`;return document.querySelector(`.${e}`).classList.add(l),document.querySelector(`.${l}`).classList.remove(e),this.ballArray[i[0]][i[1]]=this.ballArray[t[0]][t[1]],this.ballArray[t[0]][t[1]]=0,this.ballArray}}(e,l);let r=s.createNBalls(3),o=[],a=[],h=[];function n(){return e=s.insertNBalls(r),r=s.createNBalls(3),e}function m(){document.querySelector(".next-step").innerHTML="",r.forEach((t=>{document.querySelector(".next-step").append(s.createBallElement(t))}))}document.addEventListener("DOMContentLoaded",(()=>{e=n(),m()})),document.querySelector(".game-container").addEventListener("click",(async({target:r})=>{!function(t){if(t.classList.contains("ball")){const i=t.classList.item(2).split("-");o=[i[3]-1,i[2]-1],a=[]}else{const i=Math.round(t.offsetTop/t.clientHeight),e=Math.round(t.offsetLeft/t.clientWidth);a=[i,e]}}(r),function(t){if(o.length>0&&a.length>0){const e=new i(t,o);h=e.getMinPath(a),o=[],a=[]}}(e),e=await async function(){if(h.length>0){const i=t=>new Promise((i=>setTimeout(i,t)));for(let t=1;t<h.length;t+=1)e=s.moveBallXY(h[t-1],h[t]),await i(300);h=[];const r=new t(e,l);let o;[e,o]=r.findLine(),o<1&&(e=n(),m())}return e}()}));
//# sourceMappingURL=index.js.map
