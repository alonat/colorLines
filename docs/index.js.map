{"version":3,"file":"index.js","sources":["../src/js/RemoveLine.js","../src/js/FindPath.js","../src/js/index.js","../src/js/CreateBall.js"],"sourcesContent":["export default class RemoveLine {\n  constructor(ballArray, ballColors) {\n    this.ballColors = ballColors;\n    this.tmpLine = [];\n    this.tmpColor = '';\n    this.ballsContainer = document.querySelector('.balls-container');\n    this.amountToDelete = 5;\n    this.ballArray = ballArray;\n    this.HORIZONTAL_DIR = [0, 1, 0, -1];\n    this.VERTICAL_DIR = [1, 0, -1, 0];\n    this.LOOP_DIAGONAL_DIR = [-1, 1, 1, -1];\n    this.MAIN_DIAGONAL_DIR = [1, 1, -1, -1];\n    this.removedAmount = 0;\n  }\n\n  check(i, j, dir) {\n    let result = true;\n    const checkNeighbor = (\n      (\n        this.ballArray[i + dir[0]]\n        && this.ballArray[i][j] === this.ballArray[i + dir[0]][j + dir[1]]\n      ) || (\n        this.ballArray[i + dir[2]]\n        && this.ballArray[i][j] === this.ballArray[i + dir[2]][j + dir[3]]\n      )\n    );\n\n    result &= Boolean(this.ballArray[i][j]);\n    result &= checkNeighbor;\n\n    return result;\n  }\n\n  findHorizontalLine() {\n    for (let i = 0; i < this.ballArray.length; i += 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n\n      for (let j = 0; j < this.ballArray.length; j += 1) {\n        if (this.check(i, j, this.HORIZONTAL_DIR)) {\n          if (this.tmpColor !== '' && this.tmpColor !== this.ballArray[i][j]) {\n            this.removeBalls();\n          }\n          this.tmpLine.push({ i, j });\n          this.tmpColor = this.ballArray[i][j];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n  }\n\n  findVerticalLine() {\n    for (let j = 0; j < this.ballArray.length; j += 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      for (let i = 0; i < this.ballArray.length; i += 1) {\n        if (this.check(i, j, this.VERTICAL_DIR)) {\n          if (this.tmpColor !== '' && this.tmpColor !== this.ballArray[i][j]) {\n            this.removeBalls();\n          }\n          this.tmpLine.push({ i, j });\n          this.tmpColor = this.ballArray[i][j];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n  }\n\n  findLoopDiagonalLine() {\n    let i = 0;\n    for (let k = 0; k < this.ballArray.length; k += 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      for (let j = 0; j <= k; j += 1) {\n        i = k - j;\n\n        if (this.check(i, j, this.LOOP_DIAGONAL_DIR)) {\n          if (this.tmpColor !== '' && this.tmpColor !== this.ballArray[i][j]) {\n            this.removeBalls();\n          }\n          this.tmpLine.push({ i, j });\n          this.tmpColor = this.ballArray[i][j];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n\n    for (let k = this.ballArray.length - 2; k >= 0; k -= 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      for (let j = 0; j <= k; j += 1) {\n        i = k - j;\n        const indexI = this.ballArray.length - j - 1;\n        const indexJ = this.ballArray.length - i - 1;\n\n        if (this.check(indexJ, indexI, this.LOOP_DIAGONAL_DIR)) {\n          if (\n            this.tmpColor !== ''\n            && this.tmpColor !== this.ballArray[indexJ][indexI]\n          ) this.removeBalls();\n\n          this.tmpLine.push({\n            i: indexJ,\n            j: indexI,\n          });\n\n          this.tmpColor = this.ballArray[indexJ][indexI];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n  }\n\n  findMainDiagonalLine() {\n    let i = 0;\n    for (let k = this.ballArray.length - 1; k >= 0; k -= 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      for (let j = k; j <= this.ballArray.length - 1; j += 1) {\n        i = j - k;\n\n        if (this.check(i, j, this.MAIN_DIAGONAL_DIR)) {\n          if (this.tmpColor !== '' && this.tmpColor !== this.ballArray[i][j]) {\n            this.removeBalls();\n          }\n          this.tmpLine.push({ i, j });\n          this.tmpColor = this.ballArray[i][j];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n\n    for (let k = 1; k < this.ballArray.length; k += 1) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      for (let j = 0; j <= this.ballArray.length - 1 - k; j += 1) {\n        i = k + j;\n\n        if (this.check(i, j, this.MAIN_DIAGONAL_DIR)) {\n          if (this.tmpColor !== '' && this.tmpColor !== this.ballArray[i][j]) {\n            this.removeBalls();\n          }\n          this.tmpLine.push({ i, j });\n          this.tmpColor = this.ballArray[i][j];\n        } else {\n          this.removeBalls();\n        }\n      }\n\n      this.removeBalls();\n    }\n  }\n\n  removeBalls() {\n    if (this.tmpLine.length < this.amountToDelete) {\n      this.tmpLine = [];\n      this.tmpColor = '';\n      return;\n    }\n    this.tmpLine.forEach((el) => {\n      this.ballsContainer.childNodes.forEach((item) => {\n        if (item.classList.contains(`ball-position-${el.j + 1}-${el.i + 1}`)) {\n          this.ballsContainer.removeChild(item);\n        }\n      });\n      this.ballArray[el.i][el.j] = 0;\n    });\n    this.tmpLine = [];\n    this.tmpColor = '';\n    this.removedAmount += 1;\n  }\n\n  findLine() {\n    this.findHorizontalLine();\n    this.findVerticalLine();\n    this.findMainDiagonalLine();\n    this.findLoopDiagonalLine();\n\n    return [this.ballArray, this.removedAmount];\n  }\n}\n","export default class FindPath {\n  constructor(ballArray, start) {\n    this.board = ballArray;\n    this.boardSize = this.board.length;\n    this.matrix = this.makeAdjacencyMatrix();\n    this.start = start;\n    this.fromNode = this.getNodeNumber(...this.start);\n  }\n\n  getNodeNumber(i, j) {\n    return i * this.boardSize + j;\n  }\n\n  getNodeCoord(number) {\n    return [Number(Math.floor(number / this.boardSize)), number % this.boardSize];\n  }\n\n  makeAdjacencyMatrix() {\n    const n = this.boardSize * this.boardSize;\n    const matrix = [];\n\n    for (let i = 0; i < n; i += 1) {\n      matrix.push(new Array(n).fill(0));\n    }\n\n    for (let i = 0; i < this.boardSize; i += 1) {\n      for (let j = 0; j < this.boardSize; j += 1) {\n        const x = i * this.boardSize + j;\n\n        if (j > 0) {\n          matrix[x - 1][x] = 1;\n          matrix[x][x - 1] = 1;\n        }\n\n        if (i > 0) {\n          matrix[x - this.boardSize][x] = 1;\n          matrix[x][x - this.boardSize] = 1;\n        }\n      }\n    }\n    return matrix;\n  }\n\n  removeFilledNode(i, j) {\n    const nodeNumber = this.getNodeNumber(i, j);\n\n    for (let k = 0; k < this.boardSize * this.boardSize; k += 1) {\n      if (nodeNumber !== this.fromNode) {\n        this.matrix[nodeNumber][k] = 0;\n        this.matrix[k][nodeNumber] = 0;\n      }\n    }\n  }\n\n  removeAllFilledNodes() {\n    for (let i = 0; i < this.boardSize; i += 1) {\n      for (let j = 0; j < this.boardSize; j += 1) {\n        if (this.board[i][j]) {\n          this.removeFilledNode(i, j);\n        }\n      }\n    }\n  }\n\n  bfs(i, j) {\n    const queue = [];\n    const nodeNumber = this.getNodeNumber(i, j);\n    queue.push(nodeNumber);\n    const used = new Array(this.boardSize * this.boardSize).fill(false);\n    const path = new Array(this.boardSize * this.boardSize).fill(-1);\n    used[nodeNumber] = true;\n\n    while (queue.length > 0) {\n      const v = queue.shift();\n\n      for (let k = 0; k < this.matrix[v].length; k += 1) {\n        if (this.matrix[v][k] === 1) {\n          const to = k;\n\n          if (!used[to]) {\n            used[to] = true;\n            queue.push(to);\n            path[to] = v;\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  getMinPath(end) {\n    this.removeAllFilledNodes();\n    const path = this.bfs(...this.start);\n    let to = this.getNodeNumber(...end);\n    const pathEdges = [];\n\n    pathEdges.push(this.getNodeCoord(to));\n    if (path[to] === -1) {\n      return [];\n    }\n    while (to !== this.fromNode) {\n      to = path[to];\n      pathEdges.push(this.getNodeCoord(to));\n    }\n\n    return pathEdges.reverse();\n  }\n}\n","import Ball from './CreateBall.js';\nimport Line from './RemoveLine.js';\nimport Path from './FindPath.js';\n\nimport '../style/index.scss';\n\nlet ballArray = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\nconst ballColors = ['green', 'red', 'yellow', 'violet', 'blue', 'orange', 'pink'];\n\nconst ball = new Ball(ballArray, ballColors);\n\nlet nextBalls = ball.createNBalls(3);\n\nlet pathStart = [];\nlet pathEnd = [];\nlet path = [];\n\nfunction addThreeBalls() {\n  ballArray = ball.insertNBalls(nextBalls);\n  nextBalls = ball.createNBalls(3);\n\n  return ballArray;\n}\n\nfunction insertNextStepBall() {\n  document.querySelector('.next-step').innerHTML = '';\n  nextBalls.forEach((ballColor) => {\n    document.querySelector('.next-step').append(ball.createBallElement(ballColor));\n  })\n}\n\nfunction getPathCoord(target) {\n  if (target.classList.contains('ball')) {\n    const tmpClass = target.classList.item(2).split('-');\n    pathStart = [tmpClass[3] - 1, tmpClass[2] - 1];\n    pathEnd = [];\n  } else {\n    const xCoord = Math.round(target.offsetTop / target.clientHeight);\n    const yCoord = Math.round(target.offsetLeft / target.clientWidth);\n    pathEnd = [xCoord, yCoord];\n  }\n}\n\nfunction getPath(arr) {\n  if (pathStart.length > 0 && pathEnd.length > 0) {\n    const currPath = new Path(arr, pathStart);\n\n    path = currPath.getMinPath(pathEnd);\n\n    pathStart = [];\n    pathEnd = [];\n  }\n}\n\nasync function makeStep() {\n  if (path.length > 0) {\n    const delay = (ms) => new Promise((_) => setTimeout(_, ms));\n    for (let i = 1; i < path.length; i += 1) {\n      ballArray = ball.moveBallXY(path[i - 1], path[i]);\n      // eslint-disable-next-line no-await-in-loop\n      await delay(300);\n    }\n\n    path = [];\n\n    const line = new Line(ballArray, ballColors);\n    let removedAmount;\n    [ballArray, removedAmount] = line.findLine();\n    if (removedAmount < 1) {\n      ballArray = addThreeBalls();\n      insertNextStepBall()\n    }\n  }\n\n  return ballArray;\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ballArray = addThreeBalls();\n  insertNextStepBall();\n});\n\ndocument.querySelector('.game-container').addEventListener('click', async ({ target }) => {\n  getPathCoord(target);\n  getPath(ballArray);\n  ballArray = await makeStep();\n});\n","export default class Ball {\n  constructor(ballArray, ballColors) {\n    this.ballsContainer = document.querySelector('.balls-container');\n    this.ballArray = ballArray;\n    this.ballColors = ballColors;\n    this.availablePosition = [];\n  }\n\n  getAvailablePosition() {\n    this.availablePosition = [];\n    for (let i = 0; i < this.ballArray.length; i += 1) {\n      for (let j = 0; j < this.ballArray.length; j += 1) {\n        if (!this.ballArray[i][j]) {\n          this.availablePosition.push({ x: j, y: i });\n        }\n      }\n    }\n  }\n\n  getRandomPosition() {\n    this.getAvailablePosition();\n    return this.availablePosition[Math.floor(Math.random() * this.availablePosition.length)];\n  }\n\n  createNBalls(n) {\n    return Array(n).fill('').map(() => {\n      return this.ballColors[Math.floor(Math.random() * this.ballColors.length)]\n    });\n  }\n\n  createBallElement(ballColor, position) {\n    const ball = document.createElement('div');\n    const classes = ['ball', `ball-color-${ballColor}`];\n    if (position) classes.push(`ball-position-${position.x + 1}-${position.y + 1}`)\n\n    ball.setAttribute('class', classes.join(' '));\n\n    return ball;\n  }\n\n  insertNBalls(ballsToInsert) {\n    ballsToInsert.forEach((ballColor) => {\n      const position = this.getRandomPosition();\n      if (position) {\n        const ball = this.createBallElement(ballColor, position);\n\n        this.ballsContainer.appendChild(ball);\n        this.ballArray[position.y][position.x] = ballColor;\n      }\n    });\n    console.log(this.ballArray);\n    return this.ballArray;\n  }\n\n  moveBallXY(oldCoord, newCoord) {\n    const oldClass = `ball-position-${oldCoord[1] + 1}-${oldCoord[0] + 1}`;\n    const newClass = `ball-position-${newCoord[1] + 1}-${newCoord[0] + 1}`;\n\n    document.querySelector(`.${oldClass}`).classList.add(newClass);\n    document.querySelector(`.${newClass}`).classList.remove(oldClass);\n\n    this.ballArray[newCoord[0]][newCoord[1]] = this.ballArray[oldCoord[0]][oldCoord[1]];\n    this.ballArray[oldCoord[0]][oldCoord[1]] = 0;\n\n    return this.ballArray;\n  }\n}\n"],"names":["RemoveLine","[object Object]","ballArray","ballColors","this","tmpLine","tmpColor","ballsContainer","document","querySelector","amountToDelete","HORIZONTAL_DIR","VERTICAL_DIR","LOOP_DIAGONAL_DIR","MAIN_DIAGONAL_DIR","removedAmount","i","j","dir","result","checkNeighbor","Boolean","length","check","removeBalls","push","k","indexI","indexJ","forEach","el","childNodes","item","classList","contains","removeChild","findHorizontalLine","findVerticalLine","findMainDiagonalLine","findLoopDiagonalLine","FindPath","start","board","boardSize","matrix","makeAdjacencyMatrix","fromNode","getNodeNumber","number","Number","Math","floor","n","Array","fill","x","nodeNumber","removeFilledNode","queue","used","path","v","shift","to","end","removeAllFilledNodes","bfs","pathEdges","getNodeCoord","reverse","ball","availablePosition","y","getAvailablePosition","random","map","ballColor","position","createElement","classes","setAttribute","join","ballsToInsert","getRandomPosition","createBallElement","appendChild","console","log","oldCoord","newCoord","oldClass","newClass","add","remove","nextBalls","createNBalls","pathStart","pathEnd","addThreeBalls","insertNBalls","insertNextStepBall","innerHTML","append","addEventListener","async","target","tmpClass","split","xCoord","round","offsetTop","clientHeight","yCoord","offsetLeft","clientWidth","getPathCoord","arr","currPath","Path","getMinPath","getPath","delay","ms","Promise","_","setTimeout","moveBallXY","line","Line","findLine","makeStep"],"mappings":"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"}